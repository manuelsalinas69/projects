package py.com.global.educador.gui.entity;

// Generated Aug 21, 2014 6:09:06 PM by Hibernate Tools 3.4.0.CR1

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import py.com.global.educador.gui.utils.EntityInterface;
import py.com.global.educador.gui.utils.RespuestasComparator;

/**
 * Pregunta generated by hbm2java
 */
@Entity
@Table(name = "PREGUNTA" )
public class Pregunta extends EntityInterface {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long idPregunta;
	private Evaluacion evaluacion;
	private String contenidoPregunta;
	private Long ordenPregunta;
	private Date fechaAlta;
	private Usuario usuarioAlta;
	private Date fechaModificacion;
	private Usuario usuarioModificacion;
	private String estadoRegistro;
	private Boolean preguntaFinal;
	private Boolean preguntaAbierta;
	private Set<EvaluacionSuscriptor> evaluacionSuscriptors = new HashSet<EvaluacionSuscriptor>(
			0);
	private Set<Respuesta> respuestas = new HashSet<Respuesta>(0);

	private transient List<Respuesta> respuestasList;
	
	public Pregunta() {
	}

	public Pregunta(Long idPregunta) {
		this.idPregunta = idPregunta;
	}

	public Pregunta(Long idPregunta, Evaluacion evaluacion,
			String contenidoPregunta, Long ordenPregunta, Date fechaAlta,
			Usuario usuarioAlta, Date fechaModificacion,
			Usuario usuarioModificacion, String estadoRegistro,
			Boolean preguntaFinal,
			Set<EvaluacionSuscriptor> evaluacionSuscriptors,
			Set<Respuesta> respuestas) {
		this.idPregunta = idPregunta;
		this.evaluacion = evaluacion;
		this.contenidoPregunta = contenidoPregunta;
		this.ordenPregunta = ordenPregunta;
		this.fechaAlta = fechaAlta;
		this.usuarioAlta = usuarioAlta;
		this.fechaModificacion = fechaModificacion;
		this.usuarioModificacion = usuarioModificacion;
		this.estadoRegistro = estadoRegistro;
		this.preguntaFinal = preguntaFinal;
		this.evaluacionSuscriptors = evaluacionSuscriptors;
		this.respuestas = respuestas;
	}

	@Id
	@Column(name = "ID_PREGUNTA", unique = true, nullable = false, precision = 22, scale = 0)
	@SequenceGenerator(name="PREGUNTA_IDPREGUNTA_GENERATOR", sequenceName="PREGUNTA_ID_SEQ",allocationSize=1)
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="PREGUNTA_IDPREGUNTA_GENERATOR")
	@NotNull
	public Long getIdPregunta() {
		return this.idPregunta;
	}

	public void setIdPregunta(Long idPregunta) {
		this.idPregunta = idPregunta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_EVALUACION")
	public Evaluacion getEvaluacion() {
		return this.evaluacion;
	}

	public void setEvaluacion(Evaluacion evaluacion) {
		this.evaluacion = evaluacion;
	}

	@Column(name = "CONTENIDO_PREGUNTA", length = 200)
	@Size(max = 200)
	public String getContenidoPregunta() {
		return this.contenidoPregunta;
	}

	public void setContenidoPregunta(String contenidoPregunta) {
		this.contenidoPregunta = contenidoPregunta;
	}

	@Column(name = "ORDEN_PREGUNTA", precision = 22, scale = 0)
	public Long getOrdenPregunta() {
		return this.ordenPregunta;
	}

	public void setOrdenPregunta(Long ordenPregunta) {
		this.ordenPregunta = ordenPregunta;
	}

	 
	@Column(name = "FECHA_ALTA", length = 7)
	public Date getFechaAlta() {
		return this.fechaAlta;
	}

	public void setFechaAlta(Date fechaAlta) {
		this.fechaAlta = fechaAlta;
	}

	 
	@Column(name = "FECHA_MODIFICACION", length = 7)
	public Date getFechaModificacion() {
		return this.fechaModificacion;
	}

	public void setFechaModificacion(Date fechaModificacion) {
		this.fechaModificacion = fechaModificacion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "USUARIO_ALTA")
	public Usuario getUsuarioAlta() {
		return this.usuarioAlta;
	}

	public void setUsuarioAlta(Usuario usuarioAlta) {
		this.usuarioAlta = usuarioAlta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "USUARIO_MODIFICACION")
	public Usuario getUsuarioModificacion() {
		return this.usuarioModificacion;
	}

	public void setUsuarioModificacion(Usuario usuarioModificacion) {
		this.usuarioModificacion = usuarioModificacion;
	}

	@Column(name = "ESTADO_REGISTRO", length = 30)
	@Size(max = 30)
	public String getEstadoRegistro() {
		return this.estadoRegistro;
	}

	public void setEstadoRegistro(String estadoRegistro) {
		this.estadoRegistro = estadoRegistro;
	}

	@Column(name = "PREGUNTA_FINAL", precision = 1, scale = 0)
	public Boolean getPreguntaFinal() {
		return this.preguntaFinal;
	}

	public void setPreguntaFinal(Boolean preguntaFinal) {
		this.preguntaFinal = preguntaFinal;
	}
	
	
	@Column(name="PREGUNTA_ABIERTA",precision=1,scale=0)
	public Boolean getPreguntaAbierta() {
		return preguntaAbierta;
	}

	public void setPreguntaAbierta(Boolean preguntaAbierta) {
		this.preguntaAbierta = preguntaAbierta;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pregunta")
	public Set<EvaluacionSuscriptor> getEvaluacionSuscriptors() {
		return this.evaluacionSuscriptors;
	}

	public void setEvaluacionSuscriptors(
			Set<EvaluacionSuscriptor> evaluacionSuscriptors) {
		this.evaluacionSuscriptors = evaluacionSuscriptors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pregunta")
	public Set<Respuesta> getRespuestas() {
		return this.respuestas;
	}

	public void setRespuestas(Set<Respuesta> respuestas) {
		this.respuestas = respuestas;
	}

	@Override
	@Transient
	public Serializable getId() {
		return getIdPregunta();
	}

	@Transient
	public List<Respuesta> getRespuestasList() {
		if (respuestasList==null) {
			respuestasList= new ArrayList<Respuesta>(respuestas);
			Collections.sort(respuestasList, new RespuestasComparator());
		}
		return respuestasList;
	}

	public void setRespuestasList(List<Respuesta> respuestasList) {
		this.respuestasList = respuestasList;
	}
	
	

}
