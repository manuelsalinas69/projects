package py.com.global.educador.gui.entity;

// Generated Aug 21, 2014 6:09:06 PM by Hibernate Tools 3.4.0.CR1

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import py.com.global.educador.gui.utils.EntityInterface;

/**
 * Evaluacion generated by hbm2java
 */
@Entity
@Table(name = "EVALUACION" )
public class Evaluacion extends EntityInterface {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long idEvaluacion;
	private Modulo modulo;
	private String nombre;
	private String descripcion;
	private Date fechaAlta;
	private Usuario usuarioAlta;
	private Date fechaModificacion;
	private Usuario usuarioModificacion;
	private String configuracionEnvioModulo;
	private String estadoRegistro;
	private String estadoEvaluacion;
	private Set<PlanificacionEnvio> planificacionEnvios = new HashSet<PlanificacionEnvio>(
			0);
	private Set<Pregunta> preguntas = new HashSet<Pregunta>(0);
	private Set<EjecucionSuscriptorDetalle> ejecucionSuscriptorDetalles = new HashSet<EjecucionSuscriptorDetalle>(
			0);
	private Set<EvaluacionSuscriptor> evaluacionSuscriptors = new HashSet<EvaluacionSuscriptor>(
			0);

	public Evaluacion() {
	}

	public Evaluacion(Long idEvaluacion) {
		this.idEvaluacion = idEvaluacion;
	}

	public Evaluacion(Long idEvaluacion, Modulo modulo, String nombre,
			String descripcion, Date fechaAlta, Usuario usuarioAlta,
			Date fechaModificacion, Usuario usuarioModificacion,
			String configuracionEnvioModulo, String estadoRegistro,
			String estadoEvaluacion,
			Set<PlanificacionEnvio> planificacionEnvios,
			Set<Pregunta> preguntas,
			Set<EjecucionSuscriptorDetalle> ejecucionSuscriptorDetalles,
			Set<EvaluacionSuscriptor> evaluacionSuscriptors) {
		this.idEvaluacion = idEvaluacion;
		this.modulo = modulo;
		this.nombre = nombre;
		this.descripcion = descripcion;
		this.fechaAlta = fechaAlta;
		this.usuarioAlta = usuarioAlta;
		this.fechaModificacion = fechaModificacion;
		this.usuarioModificacion = usuarioModificacion;
		this.configuracionEnvioModulo = configuracionEnvioModulo;
		this.estadoRegistro = estadoRegistro;
		this.estadoEvaluacion = estadoEvaluacion;
		this.planificacionEnvios = planificacionEnvios;
		this.preguntas = preguntas;
		this.ejecucionSuscriptorDetalles = ejecucionSuscriptorDetalles;
		this.evaluacionSuscriptors = evaluacionSuscriptors;
	}

	@Id
	@Column(name = "ID_EVALUACION", unique = true, nullable = false, precision = 22, scale = 0)
	@SequenceGenerator(name="EVALUACION_IDEVALUACION_GENERATOR", sequenceName="EVALUACION_ID_SEQ",allocationSize=1)
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="EVALUACION_IDEVALUACION_GENERATOR")
	@NotNull
	public Long getIdEvaluacion() {
		return this.idEvaluacion;
	}

	public void setIdEvaluacion(Long idEvaluacion) {
		this.idEvaluacion = idEvaluacion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_MODULO")
	public Modulo getModulo() {
		return this.modulo;
	}

	public void setModulo(Modulo modulo) {
		this.modulo = modulo;
	}

	@Column(name = "NOMBRE", length = 100)
	@Size(max = 100)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "DESCRIPCION", length = 200)
	@Size(max = 200)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	 
	@Column(name = "FECHA_ALTA", length = 7)
	public Date getFechaAlta() {
		return this.fechaAlta;
	}

	public void setFechaAlta(Date fechaAlta) {
		this.fechaAlta = fechaAlta;
	}



	 
	@Column(name = "FECHA_MODIFICACION", length = 7)
	public Date getFechaModificacion() {
		return this.fechaModificacion;
	}

	public void setFechaModificacion(Date fechaModificacion) {
		this.fechaModificacion = fechaModificacion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "USUARIO_ALTA")
	public Usuario getUsuarioAlta() {
		return this.usuarioAlta;
	}

	public void setUsuarioAlta(Usuario usuarioAlta) {
		this.usuarioAlta = usuarioAlta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "USUARIO_MODIFICACION")
	public Usuario getUsuarioModificacion() {
		return this.usuarioModificacion;
	}

	public void setUsuarioModificacion(Usuario usuarioModificacion) {
		this.usuarioModificacion = usuarioModificacion;
	}
	


	@Column(name = "CONFIGURACION_ENVIO_MODULO", length = 500)
	@Size(max = 500)
	public String getConfiguracionEnvioModulo() {
		return this.configuracionEnvioModulo;
	}

	public void setConfiguracionEnvioModulo(String configuracionEnvioModulo) {
		this.configuracionEnvioModulo = configuracionEnvioModulo;
	}

	@Column(name = "ESTADO_REGISTRO", length = 30)
	@Size(max = 30)
	public String getEstadoRegistro() {
		return this.estadoRegistro;
	}

	public void setEstadoRegistro(String estadoRegistro) {
		this.estadoRegistro = estadoRegistro;
	}

	@Column(name = "ESTADO_EVALUACION", length = 30)
	@Size(max = 30)
	public String getEstadoEvaluacion() {
		return this.estadoEvaluacion;
	}

	public void setEstadoEvaluacion(String estadoEvaluacion) {
		this.estadoEvaluacion = estadoEvaluacion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "evaluacion")
	public Set<PlanificacionEnvio> getPlanificacionEnvios() {
		return this.planificacionEnvios;
	}

	public void setPlanificacionEnvios(
			Set<PlanificacionEnvio> planificacionEnvios) {
		this.planificacionEnvios = planificacionEnvios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "evaluacion")
	public Set<Pregunta> getPreguntas() {
		return this.preguntas;
	}

	public void setPreguntas(Set<Pregunta> preguntas) {
		this.preguntas = preguntas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "evaluacion")
	public Set<EjecucionSuscriptorDetalle> getEjecucionSuscriptorDetalles() {
		return this.ejecucionSuscriptorDetalles;
	}

	public void setEjecucionSuscriptorDetalles(
			Set<EjecucionSuscriptorDetalle> ejecucionSuscriptorDetalles) {
		this.ejecucionSuscriptorDetalles = ejecucionSuscriptorDetalles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "evaluacion")
	public Set<EvaluacionSuscriptor> getEvaluacionSuscriptors() {
		return this.evaluacionSuscriptors;
	}

	public void setEvaluacionSuscriptors(
			Set<EvaluacionSuscriptor> evaluacionSuscriptors) {
		this.evaluacionSuscriptors = evaluacionSuscriptors;
	}

	@Override
	@Transient
	public Serializable getId() {
		return getIdEvaluacion();
	}
	
	@Transient
	public Pregunta getPreguntaPrincipal(){
		if (preguntas==null || preguntas.isEmpty()) {
			return null;
		}
		return (new ArrayList<Pregunta>(preguntas)).get(0);
	}

}
