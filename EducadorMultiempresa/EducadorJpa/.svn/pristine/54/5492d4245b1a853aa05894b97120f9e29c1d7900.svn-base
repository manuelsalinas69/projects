package py.com.global.educador.jpa.entity;

import java.io.Serializable;
import javax.persistence.*;
import java.util.Date;
import java.util.Set;


/**
 * The persistent class for the EVALUACION database table.
 * 
 */
@Entity
public class Evaluacion implements Serializable {
	private static final long serialVersionUID = 1L;
	private long idEvaluacion;
	private String configuracionEnvioModulo;
	private String descripcion;
	private String estadoRegistro;
	private Date fechaAlta;
	private Date fechaModificacion;
	private String nombre;
	private String usuarioAlta;
	private String usuarioModificacion;
	private Set<EjecucionSuscriptorDetalle> ejecucionSuscriptorDetalles;
	private Modulo modulo;
	private Set<PlanificacionEnvio> planificacionEnvios;
	private Set<Pregunta> preguntas;

	public Evaluacion() {
	}


	@Id
	@SequenceGenerator(name="EVALUACION_IDEVALUACION_GENERATOR", sequenceName="EVALUACION_ID_SEQ")
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="EVALUACION_IDEVALUACION_GENERATOR")
	@Column(name="ID_EVALUACION")
	public long getIdEvaluacion() {
		return this.idEvaluacion;
	}

	public void setIdEvaluacion(long idEvaluacion) {
		this.idEvaluacion = idEvaluacion;
	}


	@Column(name="CONFIGURACION_ENVIO_MODULO")
	public String getConfiguracionEnvioModulo() {
		return this.configuracionEnvioModulo;
	}

	public void setConfiguracionEnvioModulo(String configuracionEnvioModulo) {
		this.configuracionEnvioModulo = configuracionEnvioModulo;
	}


	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}


	@Column(name="ESTADO_REGISTRO")
	public String getEstadoRegistro() {
		return this.estadoRegistro;
	}

	public void setEstadoRegistro(String estadoRegistro) {
		this.estadoRegistro = estadoRegistro;
	}


	@Temporal(TemporalType.DATE)
	@Column(name="FECHA_ALTA")
	public Date getFechaAlta() {
		return this.fechaAlta;
	}

	public void setFechaAlta(Date fechaAlta) {
		this.fechaAlta = fechaAlta;
	}


	@Temporal(TemporalType.DATE)
	@Column(name="FECHA_MODIFICACION")
	public Date getFechaModificacion() {
		return this.fechaModificacion;
	}

	public void setFechaModificacion(Date fechaModificacion) {
		this.fechaModificacion = fechaModificacion;
	}


	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}


	@Column(name="USUARIO_ALTA")
	public String getUsuarioAlta() {
		return this.usuarioAlta;
	}

	public void setUsuarioAlta(String usuarioAlta) {
		this.usuarioAlta = usuarioAlta;
	}


	@Column(name="USUARIO_MODIFICACION")
	public String getUsuarioModificacion() {
		return this.usuarioModificacion;
	}

	public void setUsuarioModificacion(String usuarioModificacion) {
		this.usuarioModificacion = usuarioModificacion;
	}


	//bi-directional many-to-one association to EjecucionSuscriptorDetalle
	@OneToMany(mappedBy="evaluacion")
	public Set<EjecucionSuscriptorDetalle> getEjecucionSuscriptorDetalles() {
		return this.ejecucionSuscriptorDetalles;
	}

	public void setEjecucionSuscriptorDetalles(Set<EjecucionSuscriptorDetalle> ejecucionSuscriptorDetalles) {
		this.ejecucionSuscriptorDetalles = ejecucionSuscriptorDetalles;
	}

	
	public EjecucionSuscriptorDetalle addEjecucionSuscriptorDetalles(EjecucionSuscriptorDetalle ejecucionSuscriptorDetalles) {
		getEjecucionSuscriptorDetalles().add(ejecucionSuscriptorDetalles);
		ejecucionSuscriptorDetalles.setEvaluacion(this);

		return ejecucionSuscriptorDetalles;
	}

	public EjecucionSuscriptorDetalle removeEjecucionSuscriptorDetalles(EjecucionSuscriptorDetalle ejecucionSuscriptorDetalles) {
		getEjecucionSuscriptorDetalles().remove(ejecucionSuscriptorDetalles);
		ejecucionSuscriptorDetalles.setEvaluacion(null);

		return ejecucionSuscriptorDetalles;
	}

	//bi-directional many-to-one association to Modulo
	@ManyToOne
	@JoinColumn(name="ID_MODULO")
	public Modulo getModulo() {
		return this.modulo;
	}

	public void setModulo(Modulo modulo) {
		this.modulo = modulo;
	}

	

	//bi-directional many-to-one association to PlanificacionEnvio
	@OneToMany(mappedBy="evaluacion")
	public Set<PlanificacionEnvio> getPlanificacionEnvios() {
		return this.planificacionEnvios;
	}

	public void setPlanificacionEnvios(Set<PlanificacionEnvio> planificacionEnvios) {
		this.planificacionEnvios = planificacionEnvios;
	}

	
	public PlanificacionEnvio addPlanificacionEnvios(PlanificacionEnvio planificacionEnvios) {
		getPlanificacionEnvios().add(planificacionEnvios);
		planificacionEnvios.setEvaluacion(this);

		return planificacionEnvios;
	}

	public PlanificacionEnvio removePlanificacionEnvios(PlanificacionEnvio planificacionEnvios) {
		getPlanificacionEnvios().remove(planificacionEnvios);
		planificacionEnvios.setEvaluacion(null);

		return planificacionEnvios;
	}

	//bi-directional many-to-one association to Pregunta
	@OneToMany(mappedBy="evaluacion")
	public Set<Pregunta> getPreguntas() {
		return this.preguntas;
	}

	public void setPreguntas(Set<Pregunta> preguntas) {
		this.preguntas = preguntas;
	}

	
	public Pregunta addPreguntas(Pregunta preguntas) {
		getPreguntas().add(preguntas);
		preguntas.setEvaluacion(this);

		return preguntas;
	}

	public Pregunta removePreguntas(Pregunta preguntas) {
		getPreguntas().remove(preguntas);
		preguntas.setEvaluacion(null);

		return preguntas;
	}
}